{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport products from \"../assets/results.json\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { useState, useEffect } from \"react\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { COLORS, SIZE } from \"../style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ScanScreen = function ScanScreen(_ref) {\n  var navigation = _ref.navigation;\n  var width = Dimensions.get(\"window\").width;\n  var height = Dimensions.get(\"window\").height;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    product = _useState2[0],\n    setProduct = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanned = _useState4[0],\n    setScanned = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    modal = _useState6[0],\n    setModal = _useState6[1];\n  var getProductFromBarCode = function getProductFromBarCode(barcode) {\n    for (var _product of products) {\n      if (_product.bar_code === barcode) {\n        setProduct(_product);\n      }\n    }\n  };\n  var handleScannedCodeBar = function () {\n    var _ref3 = _asyncToGenerator(function* (_ref2) {\n      var data = _ref2.data;\n      getProductFromBarCode(data);\n      setScanned(true);\n      setModal(true);\n    });\n    return function handleScannedCodeBar(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleGoBack = function handleGoBack() {\n    setModal(false);\n    setScanned(false);\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.safeareaContainer,\n    children: _jsxs(View, {\n      style: {\n        height: \"90%\",\n        width: width,\n        justifyContent: \"center\"\n      },\n      children: [_jsx(BarCodeScanner, {\n        onBarCodeScanned: scanned ? undefined : handleScannedCodeBar,\n        style: {\n          height: height,\n          width: width\n        }\n      }), scanned && _jsx(Modal, {\n        transparent: true,\n        visible: modal,\n        animationType: \"slide\",\n        children: _jsxs(SafeAreaView, {\n          style: styles.modalContainer,\n          children: [_jsx(View, {\n            style: styles.crossContain,\n            children: _jsx(Entypo, {\n              style: styles.cross,\n              name: \"cross\",\n              size: 30,\n              color: \"grey\",\n              onPress: handleGoBack\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              navigation.navigate(\"Product\", {\n                product: product\n              });\n              setModal(false);\n            },\n            children: _jsxs(View, {\n              style: styles.modal,\n              children: [_jsx(View, {\n                style: styles.imgContainer\n              }), _jsxs(View, {\n                style: styles.fiche,\n                children: [_jsx(View, {\n                  style: styles.marginDiv\n                }), _jsxs(View, {\n                  children: [_jsx(Text, {\n                    numberOfLines: 1,\n                    style: styles.productName,\n                    children: product.name\n                  }), _jsx(Text, {\n                    style: styles.productBrand,\n                    children: product.brand\n                  })]\n                }), _jsx(View, {\n                  style: styles.productFootprint,\n                  children: _jsxs(Text, {\n                    children: [\"Empreinte carbone : \", product.co2_per_kg, \" g CO2/kg\"]\n                  })\n                })]\n              })]\n            })\n          })]\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  safeareaContainer: {\n    backgroundColor: COLORS.lightBlue\n  },\n  modalContainer: {\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    position: \"absolute\",\n    bottom: 0,\n    flexDirection: \"row\",\n    height: \"30%\",\n    borderRadius: 20,\n    width: \"100%\"\n  },\n  modal: {\n    backgroundColor: \"white\",\n    flexDirection: \"row\",\n    marginLeft: 10,\n    marginRight: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: \"lightgrey\",\n    marginBottom: 5,\n    padding: 5,\n    height: 100\n  },\n  crossContain: {\n    position: \"absolute\",\n    justifyContent: \"flex-end\",\n    right: 5,\n    top: 5\n  },\n  cross: {\n    justifyContent: \"center\"\n  },\n  imgContainer: {\n    justifyContent: \"center\"\n  },\n  productPicture: {\n    height: 60,\n    width: 60\n  },\n  fiche: {\n    flexDirection: \"row\",\n    width: \"60%\"\n  },\n  marginDiv: {\n    width: 15\n  },\n  productName: {\n    color: \"dimgray\",\n    fontWeight: \"bold\",\n    fontSize: 20\n  },\n  productBrand: {\n    fontWeight: \"700\",\n    color: \"darkgrey\"\n  },\n  productFootprint: {\n    position: \"absolute\",\n    right: 5,\n    bottom: 0\n  }\n});\nexport default ScanScreen;","map":{"version":3,"names":["products","Entypo","useState","useEffect","BarCodeScanner","COLORS","SIZE","ScanScreen","navigation","width","Dimensions","get","height","product","setProduct","scanned","setScanned","modal","setModal","getProductFromBarCode","barcode","bar_code","handleScannedCodeBar","data","handleGoBack","styles","safeareaContainer","justifyContent","undefined","modalContainer","crossContain","cross","navigate","imgContainer","fiche","marginDiv","productName","name","productBrand","brand","productFootprint","co2_per_kg","StyleSheet","create","backgroundColor","lightBlue","alignItems","position","bottom","flexDirection","borderRadius","marginLeft","marginRight","borderBottomWidth","borderBottomColor","marginBottom","padding","right","top","productPicture","color","fontWeight","fontSize"],"sources":["/Users/emilyledeunf/Documents/dev/ReactNative/SillageCarbone/sillage-carbone/SillageCarbone/screens/ScanScreen.js"],"sourcesContent":["import { Text,\n    View,\n    StyleSheet,\n    Dimensions,\n    SafeAreaView,\n    Modal,\n    TouchableOpacity,\n    Image} from \"react-native\";\nimport products from \"../assets/results.json\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { useState, useEffect } from \"react\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { COLORS, SIZE } from \"../style\";\n\nconst ScanScreen = ({navigation}) => {\n\n    // -- Screen dimensions\n    const width = Dimensions.get(\"window\").width;\n    const height = Dimensions.get(\"window\").height;\n\n    //- States\n    const [product, setProduct] = useState();\n    const [scanned, setScanned] = useState(false);\n    const [modal, setModal] = useState(false);\n\n    //- Retrieve the product with code bar\n    const getProductFromBarCode = (barcode) => {\n        for (const product of products) {\n            if (product.bar_code === barcode) {\n                setProduct(product);\n            } \n        }\n    };\n\n    //- Read code bar\n    const handleScannedCodeBar = async ({data}) => {\n        getProductFromBarCode(data);\n        setScanned(true);\n        setModal(true);\n    }\n\n    const handleGoBack = () => {\n        setModal(false);\n        setScanned(false);\n      };\n\n\n    return(\n        <SafeAreaView style={styles.safeareaContainer}>\n           <View style={{height: \"90%\", width: width,justifyContent: \"center\"}}>\n           <BarCodeScanner\n          onBarCodeScanned={scanned ? undefined : handleScannedCodeBar}\n          style={{ height: height, width: width }}\n        />\n        {scanned && (\n                  <Modal transparent={true} visible={modal} animationType=\"slide\">\n                  <SafeAreaView style={styles.modalContainer}>\n                    <View style={styles.crossContain}>\n                      <Entypo\n                        style={styles.cross}\n                        name=\"cross\"\n                        size={30}\n                        color=\"grey\"\n                        onPress={handleGoBack}\n                      />\n                    </View>\n                    <TouchableOpacity\n                      onPress={() =>{\n                        navigation.navigate(\"Product\", {product: product});\n                        setModal(false);\n                      }}\n                    >\n                      {/* Rajouter lien vers page Product à créer (si besoin) */}\n                      <View style={styles.modal}>\n                        <View style={styles.imgContainer}>\n                          {/* {product.url_image && (\n                            <Image \n                            source={{uri: \"https:\"}} \n                            style={styles.productPicture}\n                            resizeMode=\"contain\"\n                            />\n                          )} */}\n                        </View>\n                        <View style={styles.fiche}>\n                          <View style={styles.marginDiv}></View>\n      \n                          {/* Product name and brand */}\n                          <View>\n                            <Text numberOfLines={1} style={styles.productName}>\n                              {product.name}\n                            </Text>\n                            <Text style={styles.productBrand}>{product.brand}</Text>\n                          </View>\n      \n                          {/* Empreinte carbone */}\n                          <View style={styles.productFootprint}>\n                            <Text>Empreinte carbone : {product.co2_per_kg} g CO2/kg</Text>\n                          </View>\n                        </View>\n                      </View>\n                    </TouchableOpacity>\n                  </SafeAreaView>\n                </Modal>\n        )}\n        </View>\n        </SafeAreaView>\n    )\n\n    // return (\n    //     <SafeAreaView style={styles.safeareaContainer}>\n    //       <View\n    //         style={{height: \"90%\", width: width,justifyContent: \"center\"}}\n    //       >\n    //         <BarCodeScanner\n    //           onBarCodeScanned={scanned ? undefined : handleScannedCodeBar}\n    //           style={{ height: height, width: width }}\n    //         />\n    //         {scanned && (\n    //           <Modal transparent={true} visible={modal} animationType=\"slide\">\n    //             <SafeAreaView style={styles.modalContainer}>\n    //               <View style={styles.crossContain}>\n    //                 <Entypo\n    //                   style={styles.cross}\n    //                   name=\"cross\"\n    //                   size={30}\n    //                   color=\"grey\"\n    //                   onPress={handleGoBack}\n    //                 />\n    //               </View>\n    //               <TouchableOpacity\n    //                 onPress={() =>{\n    //                   navigation.navigate(\"Product\", {product: product});\n    //                   setModal(false);\n    //                 }}\n    //               >\n    //                 {/* Rajouter lien vers page Product à créer (si besoin) */}\n    //                 <View style={styles.modal}>\n    //                   <View style={styles.imgContainer}>\n    //                     {response.data.picture && (\n    //                       <Image \n    //                       source={require(`../assets/${product.pictureUrl}`)} \n    //                       style={styles.productPicture}\n    //                       resizeMode=\"contain\"\n    //                       />\n    //                     )}\n    //                   </View>\n    //                   <View style={styles.fiche}>\n    //                     <View style={styles.marginDiv}></View>\n    \n    //                     {/* Product name and brand */}\n    //                     <View>\n    //                       <Text numberOfLines={1} style={styles.productName}>\n    //                         {product.name}\n    //                       </Text>\n    //                       <Text style={styles.productBrand}>{product.brand}</Text>\n    //                     </View>\n    \n    //                     {/* Empreinte carbone */}\n    //                     <View style={styles.productFootprint}>\n    //                       <Text>Empreinte carbone : {product.empreinteCarbone} g CO2/kg</Text>\n    //                     </View>\n    //                   </View>\n    //                 </View>\n    //               </TouchableOpacity>\n    //             </SafeAreaView>\n    //           </Modal>\n    //         )}\n    //       </View>\n    //     </SafeAreaView>\n    //   );\n}\n\n\nconst styles = StyleSheet.create({\n    safeareaContainer: { backgroundColor: COLORS.lightBlue },\n    modalContainer: {\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\",\n      backgroundColor: \"white\",\n      position: \"absolute\",\n      bottom: 0,\n      flexDirection: \"row\",\n      height: \"30%\",\n      borderRadius: 20,\n      width: \"100%\",\n    },\n    modal: {\n      backgroundColor: \"white\",\n      flexDirection: \"row\",\n      marginLeft: 10,\n      marginRight: 10,\n      borderBottomWidth: 1,\n      borderBottomColor: \"lightgrey\",\n      marginBottom: 5,\n      padding: 5,\n      height: 100,\n    },\n    crossContain: {\n      position: \"absolute\",\n      justifyContent: \"flex-end\",\n      right: 5,\n      top: 5,\n    },\n    cross: { justifyContent: \"center\" },\n    imgContainer: { justifyContent: \"center\" },\n    productPicture: {\n      height: 60,\n      width: 60,\n    },\n    fiche: { flexDirection: \"row\", width: \"60%\" },\n    marginDiv: { width: 15 },\n    productName: { color: \"dimgray\", fontWeight: \"bold\", fontSize: 20 },\n    productBrand: { fontWeight: \"700\", color: \"darkgrey\" },\n    productFootprint: { position: \"absolute\", right: 5, bottom: 0 },\n  });\n\nexport default ScanScreen;\n"],"mappings":";;;;;;;;;;AAQA,OAAOA,QAAQ;AACf,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,MAAM,EAAEC,IAAI;AAAmB;AAAA;AAExC,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAAqB;EAAA,IAAhBC,UAAU,QAAVA,UAAU;EAG3B,IAAMC,KAAK,GAAGC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACF,KAAK;EAC5C,IAAMG,MAAM,GAAGF,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM;EAG9C,gBAA8BV,QAAQ,EAAE;IAAA;IAAjCW,OAAO;IAAEC,UAAU;EAC1B,iBAA8BZ,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCa,OAAO;IAAEC,UAAU;EAC1B,iBAA0Bd,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAlCe,KAAK;IAAEC,QAAQ;EAGtB,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAIC,OAAO,EAAK;IACvC,KAAK,IAAMP,QAAO,IAAIb,QAAQ,EAAE;MAC5B,IAAIa,QAAO,CAACQ,QAAQ,KAAKD,OAAO,EAAE;QAC9BN,UAAU,CAACD,QAAO,CAAC;MACvB;IACJ;EACJ,CAAC;EAGD,IAAMS,oBAAoB;IAAA,8BAAG,kBAAkB;MAAA,IAAVC,IAAI,SAAJA,IAAI;MACrCJ,qBAAqB,CAACI,IAAI,CAAC;MAC3BP,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC;IAAA,gBAJKI,oBAAoB;MAAA;IAAA;EAAA,GAIzB;EAED,IAAME,YAAY,GAAG,SAAfA,YAAY,GAAS;IACvBN,QAAQ,CAAC,KAAK,CAAC;IACfF,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAGH,OACI,KAAC,YAAY;IAAC,KAAK,EAAES,MAAM,CAACC,iBAAkB;IAAA,UAC3C,MAAC,IAAI;MAAC,KAAK,EAAE;QAACd,MAAM,EAAE,KAAK;QAAEH,KAAK,EAAEA,KAAK;QAACkB,cAAc,EAAE;MAAQ,CAAE;MAAA,WACpE,KAAC,cAAc;QAChB,gBAAgB,EAAEZ,OAAO,GAAGa,SAAS,GAAGN,oBAAqB;QAC7D,KAAK,EAAE;UAAEV,MAAM,EAAEA,MAAM;UAAEH,KAAK,EAAEA;QAAM;MAAE,EACxC,EACDM,OAAO,IACE,KAAC,KAAK;QAAC,WAAW,EAAE,IAAK;QAAC,OAAO,EAAEE,KAAM;QAAC,aAAa,EAAC,OAAO;QAAA,UAC/D,MAAC,YAAY;UAAC,KAAK,EAAEQ,MAAM,CAACI,cAAe;UAAA,WACzC,KAAC,IAAI;YAAC,KAAK,EAAEJ,MAAM,CAACK,YAAa;YAAA,UAC/B,KAAC,MAAM;cACL,KAAK,EAAEL,MAAM,CAACM,KAAM;cACpB,IAAI,EAAC,OAAO;cACZ,IAAI,EAAE,EAAG;cACT,KAAK,EAAC,MAAM;cACZ,OAAO,EAAEP;YAAa;UACtB,EACG,EACP,KAAC,gBAAgB;YACf,OAAO,EAAE,mBAAK;cACZhB,UAAU,CAACwB,QAAQ,CAAC,SAAS,EAAE;gBAACnB,OAAO,EAAEA;cAAO,CAAC,CAAC;cAClDK,QAAQ,CAAC,KAAK,CAAC;YACjB,CAAE;YAAA,UAGF,MAAC,IAAI;cAAC,KAAK,EAAEO,MAAM,CAACR,KAAM;cAAA,WACxB,KAAC,IAAI;gBAAC,KAAK,EAAEQ,MAAM,CAACQ;cAAa,EAQ1B,EACP,MAAC,IAAI;gBAAC,KAAK,EAAER,MAAM,CAACS,KAAM;gBAAA,WACxB,KAAC,IAAI;kBAAC,KAAK,EAAET,MAAM,CAACU;gBAAU,EAAQ,EAGtC,MAAC,IAAI;kBAAA,WACH,KAAC,IAAI;oBAAC,aAAa,EAAE,CAAE;oBAAC,KAAK,EAAEV,MAAM,CAACW,WAAY;oBAAA,UAC/CvB,OAAO,CAACwB;kBAAI,EACR,EACP,KAAC,IAAI;oBAAC,KAAK,EAAEZ,MAAM,CAACa,YAAa;oBAAA,UAAEzB,OAAO,CAAC0B;kBAAK,EAAQ;gBAAA,EACnD,EAGP,KAAC,IAAI;kBAAC,KAAK,EAAEd,MAAM,CAACe,gBAAiB;kBAAA,UACnC,MAAC,IAAI;oBAAA,mCAAsB3B,OAAO,CAAC4B,UAAU;kBAAA;gBAAiB,EACzD;cAAA,EACF;YAAA;UACF,EACU;QAAA;MACN,EAExB;IAAA;EACM,EACQ;AAiEvB,CAAC;AAGD,IAAMhB,MAAM,GAAGiB,UAAU,CAACC,MAAM,CAAC;EAC7BjB,iBAAiB,EAAE;IAAEkB,eAAe,EAAEvC,MAAM,CAACwC;EAAU,CAAC;EACxDhB,cAAc,EAAE;IACdF,cAAc,EAAE,cAAc;IAC9BmB,UAAU,EAAE,QAAQ;IACpBF,eAAe,EAAE,OAAO;IACxBG,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,CAAC;IACTC,aAAa,EAAE,KAAK;IACpBrC,MAAM,EAAE,KAAK;IACbsC,YAAY,EAAE,EAAE;IAChBzC,KAAK,EAAE;EACT,CAAC;EACDQ,KAAK,EAAE;IACL2B,eAAe,EAAE,OAAO;IACxBK,aAAa,EAAE,KAAK;IACpBE,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,EAAE;IACfC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,WAAW;IAC9BC,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE,CAAC;IACV5C,MAAM,EAAE;EACV,CAAC;EACDkB,YAAY,EAAE;IACZiB,QAAQ,EAAE,UAAU;IACpBpB,cAAc,EAAE,UAAU;IAC1B8B,KAAK,EAAE,CAAC;IACRC,GAAG,EAAE;EACP,CAAC;EACD3B,KAAK,EAAE;IAAEJ,cAAc,EAAE;EAAS,CAAC;EACnCM,YAAY,EAAE;IAAEN,cAAc,EAAE;EAAS,CAAC;EAC1CgC,cAAc,EAAE;IACd/C,MAAM,EAAE,EAAE;IACVH,KAAK,EAAE;EACT,CAAC;EACDyB,KAAK,EAAE;IAAEe,aAAa,EAAE,KAAK;IAAExC,KAAK,EAAE;EAAM,CAAC;EAC7C0B,SAAS,EAAE;IAAE1B,KAAK,EAAE;EAAG,CAAC;EACxB2B,WAAW,EAAE;IAAEwB,KAAK,EAAE,SAAS;IAAEC,UAAU,EAAE,MAAM;IAAEC,QAAQ,EAAE;EAAG,CAAC;EACnExB,YAAY,EAAE;IAAEuB,UAAU,EAAE,KAAK;IAAED,KAAK,EAAE;EAAW,CAAC;EACtDpB,gBAAgB,EAAE;IAAEO,QAAQ,EAAE,UAAU;IAAEU,KAAK,EAAE,CAAC;IAAET,MAAM,EAAE;EAAE;AAChE,CAAC,CAAC;AAEJ,eAAezC,UAAU"},"metadata":{},"sourceType":"module"}